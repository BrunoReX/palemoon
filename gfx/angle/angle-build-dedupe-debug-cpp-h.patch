From: Jeff Gilbert <jgilbert@mozilla.com>

diff --git a/gfx/angle/src/compiler/Diagnostics.cpp b/gfx/angle/src/compiler/Diagnostics.cpp
--- a/gfx/angle/src/compiler/Diagnostics.cpp
+++ b/gfx/angle/src/compiler/Diagnostics.cpp
@@ -1,17 +1,17 @@
 //
 // Copyright (c) 2012 The ANGLE Project Authors. All rights reserved.
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 //
 
 #include "compiler/Diagnostics.h"
 
-#include "compiler/debug.h"
+#include "compiler/compiler_debug.h"
 #include "compiler/InfoSink.h"
 #include "compiler/preprocessor/SourceLocation.h"
 
 TDiagnostics::TDiagnostics(TInfoSink& infoSink) :
     mInfoSink(infoSink),
     mNumErrors(0),
     mNumWarnings(0)
 {
diff --git a/gfx/angle/src/compiler/DirectiveHandler.cpp b/gfx/angle/src/compiler/DirectiveHandler.cpp
--- a/gfx/angle/src/compiler/DirectiveHandler.cpp
+++ b/gfx/angle/src/compiler/DirectiveHandler.cpp
@@ -3,17 +3,17 @@
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 //
 
 #include "compiler/DirectiveHandler.h"
 
 #include <sstream>
 
-#include "compiler/debug.h"
+#include "compiler/compiler_debug.h"
 #include "compiler/Diagnostics.h"
 
 static TBehavior getBehavior(const std::string& str)
 {
     static const std::string kRequire("require");
     static const std::string kEnable("enable");
     static const std::string kDisable("disable");
     static const std::string kWarn("warn");
diff --git a/gfx/angle/src/compiler/OutputGLSLBase.cpp b/gfx/angle/src/compiler/OutputGLSLBase.cpp
--- a/gfx/angle/src/compiler/OutputGLSLBase.cpp
+++ b/gfx/angle/src/compiler/OutputGLSLBase.cpp
@@ -1,16 +1,16 @@
 //
 // Copyright (c) 2002-2011 The ANGLE Project Authors. All rights reserved.
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 //
 
 #include "compiler/OutputGLSLBase.h"
-#include "compiler/debug.h"
+#include "compiler/compiler_debug.h"
 
 #include <cfloat>
 
 namespace
 {
 TString arrayBrackets(const TType& type)
 {
     ASSERT(type.isArray());
diff --git a/gfx/angle/src/compiler/OutputHLSL.cpp b/gfx/angle/src/compiler/OutputHLSL.cpp
--- a/gfx/angle/src/compiler/OutputHLSL.cpp
+++ b/gfx/angle/src/compiler/OutputHLSL.cpp
@@ -2,17 +2,17 @@
 // Copyright (c) 2002-2012 The ANGLE Project Authors. All rights reserved.
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 //
 
 #include "compiler/OutputHLSL.h"
 
 #include "common/angleutils.h"
-#include "compiler/debug.h"
+#include "compiler/compiler_debug.h"
 #include "compiler/DetectDiscontinuity.h"
 #include "compiler/InfoSink.h"
 #include "compiler/SearchSymbol.h"
 #include "compiler/UnfoldShortCircuit.h"
 
 #include <algorithm>
 #include <cfloat>
 #include <stdio.h>
diff --git a/gfx/angle/src/compiler/Types.h b/gfx/angle/src/compiler/Types.h
--- a/gfx/angle/src/compiler/Types.h
+++ b/gfx/angle/src/compiler/Types.h
@@ -4,17 +4,17 @@
 // found in the LICENSE file.
 //
 
 #ifndef _TYPES_INCLUDED
 #define _TYPES_INCLUDED
 
 #include "compiler/BaseTypes.h"
 #include "compiler/Common.h"
-#include "compiler/debug.h"
+#include "compiler/compiler_debug.h"
 
 class TType;
 struct TPublicType;
 
 //
 // Need to have association of line numbers to types in a list for building structs.
 //
 struct TTypeLine {
diff --git a/gfx/angle/src/compiler/debug.cpp b/gfx/angle/src/compiler/compiler_debug.cpp
rename from gfx/angle/src/compiler/debug.cpp
rename to gfx/angle/src/compiler/compiler_debug.cpp
--- a/gfx/angle/src/compiler/debug.cpp
+++ b/gfx/angle/src/compiler/compiler_debug.cpp
@@ -1,17 +1,17 @@
 //
 // Copyright (c) 2002-2010 The ANGLE Project Authors. All rights reserved.
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 //
 
-// debug.cpp: Debugging utilities.
+// compiler_debug.cpp: Debugging utilities.
 
-#include "compiler/debug.h"
+#include "compiler/compiler_debug.h"
 
 #include <stdarg.h>
 #include <stdio.h>
 
 #include "compiler/InitializeParseContext.h"
 #include "compiler/ParseHelper.h"
 
 static const int kTraceBufferLen = 1024;
diff --git a/gfx/angle/src/compiler/debug.h b/gfx/angle/src/compiler/compiler_debug.h
rename from gfx/angle/src/compiler/debug.h
rename to gfx/angle/src/compiler/compiler_debug.h
--- a/gfx/angle/src/compiler/debug.h
+++ b/gfx/angle/src/compiler/compiler_debug.h
@@ -1,15 +1,15 @@
 //
 // Copyright (c) 2002-2010 The ANGLE Project Authors. All rights reserved.
 // Use of this source code is governed by a BSD-style license that can be
 // found in the LICENSE file.
 //
 
-// debug.h: Debugging utilities.
+// compiler_debug.h: Debugging utilities.
 
 #ifndef COMPILER_DEBUG_H_
 #define COMPILER_DEBUG_H_
 
 #include <assert.h>
 
 #ifdef _DEBUG
 #define TRACE_ENABLED  // define to enable debug message tracing
diff --git a/gfx/angle/src/compiler/osinclude.h b/gfx/angle/src/compiler/osinclude.h
--- a/gfx/angle/src/compiler/osinclude.h
+++ b/gfx/angle/src/compiler/osinclude.h
@@ -30,17 +30,17 @@
 #include <windows.h>
 #elif defined(ANGLE_OS_POSIX)
 #include <pthread.h>
 #include <semaphore.h>
 #include <errno.h>
 #endif  // ANGLE_OS_WIN
 
 
-#include "compiler/debug.h"
+#include "compiler/compiler_debug.h"
 
 //
 // Thread Local Storage Operations
 //
 #if defined(ANGLE_OS_WIN)
 typedef DWORD OS_TLSIndex;
 #define OS_INVALID_TLS_INDEX (TLS_OUT_OF_INDEXES)
 #elif defined(ANGLE_OS_POSIX)
