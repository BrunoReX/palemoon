# 
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

DEPTH		= @DEPTH@
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MSVC_ENABLE_PGO := 1
LIBXUL_LIBRARY  = 1
EXPORT_LIBRARY  = 1

DEFINES += -DSK_A32_SHIFT=24 -DSK_R32_SHIFT=16 -DSK_G32_SHIFT=8 -DSK_B32_SHIFT=0

LOCAL_INCLUDES += \
	-I$(srcdir)/include/core \
	-I$(srcdir)/include/config \
	-I$(srcdir)/include/gpu \
	-I$(srcdir)/include/pipe \
	-I$(srcdir)/include/ports \
	-I$(srcdir)/include/images \
	-I$(srcdir)/include/utils \
	-I$(srcdir)/include/utils/mac \
	-I$(srcdir)/include/utils/win \
	-I$(srcdir)/include/views \
	-I$(srcdir)/include/effects \
	-I$(srcdir)/src/core \
	-I$(srcdir)/src/image \
	-I$(srcdir)/src/gpu \
	-I$(srcdir)/src/gpu/effects \
	-I$(srcdir)/src/gpu/gl \
	-I$(srcdir)/src/utils \
	-I$(srcdir)/src/sfnt \
	$(NULL)

VPATH += \
	$(srcdir)/src/core \
	$(srcdir)/src/gpu \
	$(srcdir)/src/gpu/effects \
	$(srcdir)/src/gpu/gl \
	$(srcdir)/src/image \
	$(srcdir)/src/images \
	$(srcdir)/src/pipe \
	$(srcdir)/src/ports \
	$(srcdir)/src/opts \
	$(srcdir)/src/effects \
	$(srcdir)/src/effects/gradients \
	$(srcdir)/src/utils \
	$(srcdir)/src/utils/mac \
	$(srcdir)/src/sfnt \
	$(NULL)

ifeq (android,$(MOZ_WIDGET_TOOLKIT))
OS_CXXFLAGS += $(CAIRO_FT_CFLAGS)
endif

ifeq (gtk2,$(MOZ_WIDGET_TOOLKIT))
OS_CXXFLAGS += $(MOZ_PANGO_CFLAGS)
endif

ifeq (qt,$(MOZ_WIDGET_TOOLKIT))
OS_CXXFLAGS += $(MOZ_PANGO_CFLAGS)
ifeq (Linux,$(OS_TARGET))
DEFINES += -DSK_USE_POSIX_THREADS=1
endif
endif

ifeq ($(MOZ_WIDGET_TOOLKIT),$(findstring $(MOZ_WIDGET_TOOLKIT),android gtk2 gonk cocoa))
DEFINES += -DSK_USE_POSIX_THREADS=1
endif

ifeq (windows,$(MOZ_WIDGET_TOOLKIT))
DEFINES += -DSKIA_IMPLEMENTATION=1 -DGR_IMPLEMENTATION=1
endif

ifneq (,$(INTEL_ARCHITECTURE))
ifdef HAVE_TOOLCHAIN_SUPPORT_MSSSE3
DEFINES += -DSK_BUILD_SSSE3
endif
else
ifeq ($(CPU_ARCH)_$(GNU_CC),arm_1)
SSRCS += memset.arm.S
endif
endif

include $(topsrcdir)/config/rules.mk

ifneq (,$(INTEL_ARCHITECTURE))
ifdef GNU_CC
SkBitmapProcState_opts_SSE2.$(OBJ_SUFFIX): CXXFLAGS+=-msse2
SkBitmapProcState_opts_SSSE3.$(OBJ_SUFFIX): CXXFLAGS+=-mssse3
SkBlitRow_opts_SSE2.$(OBJ_SUFFIX): CXXFLAGS+=-msse2
SkBlitRect_opts_SSE2.$(OBJ_SUFFIX): CXXFLAGS+=-msse2
SkUtils_opts_SSE2.$(OBJ_SUFFIX): CXXFLAGS+=-msse2
endif
endif

ifeq ($(CPU_ARCH)_$(GNU_CC),arm_1)
# The assembly uses the frame pointer register (r7 in Thumb/r11 in
# ARM), the compiler doesn't like that.
CXXFLAGS := $(filter-out -fno-omit-frame-pointer,$(CXXFLAGS)) -fomit-frame-pointer
CFLAGS := $(filter-out -fno-omit-frame-pointer,$(CFLAGS)) -fomit-frame-pointer
endif
