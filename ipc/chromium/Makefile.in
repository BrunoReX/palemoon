# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

DEPTH     = @DEPTH@
topsrcdir = @top_srcdir@
srcdir    = @srcdir@
VPATH     = @srcdir@

include $(DEPTH)/config/autoconf.mk

OS_CXXFLAGS := $(filter-out -fshort-wchar,$(OS_CXXFLAGS))

LIBRARY_NAME = chromium_s
FORCE_STATIC_LIB = 1
LIBXUL_LIBRARY = 1
EXPORT_LIBRARY = 1

ACDEFINES =

ifndef MOZ_NATIVE_LIBEVENT # {
vpath %.c \
  $(srcdir)/src/third_party/libevent \
  $(NULL)
else # } else {
# message_pump_libevent.cc includes third_party/libevent/event.h,
# which we put in $(DIST), see export rule below
LOCAL_INCLUDES += -I$(DIST)
endif # }

vpath %.cc \
  $(srcdir)/src/base \
  $(srcdir)/src/chrome/common \
  $(NULL)

vpath %.mm \
  $(srcdir)/src/base \
  $(srcdir)/src/chrome/common \
  $(NULL)

include $(topsrcdir)/config/config.mk
include $(topsrcdir)/ipc/chromium/chromium-config.mk

ifdef OS_POSIX # {
ifeq ($(OS_TARGET),Android)
DEFINES += -DANDROID -D_POSIX_MONOTONIC_CLOCK=0
endif # Android
endif # } OS_POSIX

ifdef OS_MACOSX # {

CMMSRCS += \
  base_paths_mac.mm \
  file_util_mac.mm \
  file_version_info_mac.mm \
  mac_util.mm \
  message_pump_mac.mm \
  platform_thread_mac.mm \
  process_util_mac.mm \
  scoped_nsautorelease_pool.mm \
  sys_string_conversions_mac.mm \
  worker_pool_mac.mm \
  chrome_paths_mac.mm \
  mach_ipc_mac.mm \
  platform_util_mac.mm \
  chrome_application_mac.mm \
  $(NULL)

endif # } OS_MACOSX

# libevent

ifndef MOZ_NATIVE_LIBEVENT # {

ifdef OS_POSIX # {

LOCAL_INCLUDES += -I$(srcdir)/src/third_party/libevent
LOCAL_INCLUDES += -I$(srcdir)/src/third_party/libevent/include
DEFINES += -DHAVE_CONFIG_H

CSRCS += \
  buffer.c \
  bufferevent.c \
  bufferevent_sock.c \
  bufferevent_ratelim.c \
  evdns.c \
  event.c \
  event_tagging.c \
  evmap.c \
  evthread.c \
  evthread_pthread.c \
  evrpc.c \
  evutil.c \
  evutil_rand.c \
  http.c \
  listener.c \
  log.c \
  poll.c \
  select.c \
  signal.c \
  strlcpy.c \
  $(NULL)

ifdef OS_MACOSX # {
LOCAL_INCLUDES += -I$(srcdir)/src/third_party/libevent/mac
CSRCS += kqueue.c
endif # }

ifdef OS_LINUX # {
ifeq ($(OS_TARGET),Android) # {
LOCAL_INCLUDES += -I$(srcdir)/src/third_party/libevent/android
else # } else {
LOCAL_INCLUDES += -I$(srcdir)/src/third_party/libevent/linux
endif # }
CSRCS += \
  epoll.c \
  epoll_sub.c \
  $(NULL)
endif # }

ifdef OS_BSD # {
ifneq (,$(OS_DRAGONFLY)$(OS_FREEBSD)) # {
DEFINES += -D_EVENT_HAVE_SENDFILE
endif # }
LOCAL_INCLUDES += -I$(srcdir)/src/third_party/libevent/bsd
CSRCS += kqueue.c
endif # }

endif # }

endif # }

OS_CXXFLAGS += $(TK_CFLAGS)

include $(topsrcdir)/config/rules.mk

ifdef MOZ_NATIVE_LIBEVENT # {

export-preqs = \
  $(call mkdir_deps,$(DIST)/third_party/libevent) \
  $(NULL)

export:: $(export-preqs)
	echo "#include <event.h>" > $(DIST)/third_party/libevent/event.h

endif # }
