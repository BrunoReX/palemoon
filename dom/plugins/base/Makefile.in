#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 1998
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#
# Alternatively, the contents of this file may be used under the terms of
# either the GNU General Public License Version 2 or later (the "GPL"), or
# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

DEPTH		= ../../..
topsrcdir	= @top_srcdir@
srcdir		= @srcdir@
VPATH		= @srcdir@

include $(DEPTH)/config/autoconf.mk

MODULE		= plugin
LIBRARY_NAME	= gkplugin
EXPORT_LIBRARY = 1
IS_COMPONENT    = 1
MODULE_NAME	= nsPluginModule
GRE_MODULE	= 1
LIBXUL_LIBRARY = 1

EXPORTS_NAMESPACES = mozilla

XPIDLSRCS = \
  nsIHTTPHeaderListener.idl \
  nsIPluginDocument.idl \
  nsIPluginHost.idl \
  nsIPluginInputStream.idl \
  nsIPluginInstanceOwner.idl \
  nsIPluginStreamInfo.idl \
  nsIPluginStreamListener.idl \
  nsIPluginTag.idl \
  nsIPluginTagInfo.idl \
  nspluginroot.idl \
  $(NULL)

EXPORTS = \
  npapi.h \
  npfunctions.h \
  nptypes.h \
  npruntime.h \
  nsPluginLogging.h \
  nsPluginError.h \
  nsPluginNativeWindow.h \
  nsPluginsCID.h \
  nsNPAPIPluginInstance.h \
  nsPluginsDir.h \
  nsPluginTags.h \
  nsPluginDirServiceProvider.h \
  nsPluginHost.h \
  nsPluginInstanceOwner.h \
  $(NULL)

EXPORTS_mozilla = \
  PluginPRLibrary.h \
  $(NULL)

CPPSRCS		= \
		nsNPAPIPlugin.cpp \
		nsNPAPIPluginInstance.cpp \
		nsNPAPIPluginStreamListener.cpp \
		nsPluginStreamListenerPeer.cpp \
		nsPluginHost.cpp \
		nsPluginModule.cpp \
		nsJSNPRuntime.cpp \
		nsPluginTags.cpp \
		PluginPRLibrary.cpp \
		nsPluginInstanceOwner.cpp \
		$(NULL)

ifeq ($(MOZ_WIDGET_TOOLKIT),android)
DIRS += android
LOCAL_INCLUDES += -I$(topsrcdir)/dom/plugins/base/android
endif

ifeq ($(OS_ARCH),WINNT)
	CPPSRCS += nsPluginsDirWin.cpp
	CPPSRCS += nsPluginNativeWindowWin.cpp
	CPPSRCS += nsPluginDirServiceProvider.cpp
	LOCAL_INCLUDES += -I$(topsrcdir)/xpcom/base
else
ifeq ($(MOZ_WIDGET_TOOLKIT),os2)
	CPPSRCS += nsPluginsDirOS2.cpp
	CPPSRCS += nsPluginNativeWindowOS2.cpp
else
ifeq (cocoa,$(MOZ_WIDGET_TOOLKIT))
	CPPSRCS += nsPluginsDirDarwin.cpp
	CPPSRCS += nsPluginNativeWindow.cpp
else
	CPPSRCS += nsPluginsDirUnix.cpp
ifeq ($(MOZ_WIDGET_TOOLKIT),gtk2)
	CPPSRCS += nsPluginNativeWindowGtk2.cpp
else
ifeq ($(MOZ_WIDGET_TOOLKIT),qt)
	CPPSRCS += nsPluginNativeWindowQt.cpp
else
	CPPSRCS += nsPluginNativeWindow.cpp
endif
endif
endif
endif
endif

LOCAL_INCLUDES += \
  -I$(topsrcdir)/xpcom/base/ \
  $(MOZ_CAIRO_CFLAGS) \
  $(NULL)

include $(topsrcdir)/dom/dom-config.mk
include $(topsrcdir)/config/config.mk
include $(topsrcdir)/ipc/chromium/chromium-config.mk
include $(topsrcdir)/config/rules.mk

CXXFLAGS         += $(TK_CFLAGS)

$(DIST)/bin/plugins:
	$(NSINSTALL) -D $@

export:: $(DIST)/bin/plugins
