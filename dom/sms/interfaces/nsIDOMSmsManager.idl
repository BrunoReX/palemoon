/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org.
 *
 * The Initial Developer of the Original Code is Mozilla Foundation
 * Portions created by the Initial Developer are Copyright (C) 2011
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *  Mounir Lamouri <mounir.lamouri@mozilla.com> (Original Author)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsIDOMEventTarget.idl"

interface nsIDOMEventListener;
interface nsIDOMMozSmsRequest;
interface nsIDOMMozSmsFilter;

[scriptable, function, uuid(c9916dce-2947-41bb-95c2-818f792a020c)]
interface nsIDOMMozSmsManager : nsIDOMEventTarget
{
  unsigned short      getNumberOfMessagesForText(in DOMString text);

  // The first parameter can be either a DOMString (only one number) or an array
  // of DOMStrings.
  // The method returns a SmsRequest object if one number has been passed.
  // An array of SmsRequest objects otherwise.
  jsval send(in jsval number, in DOMString message);

  [binaryname(GetMessageMoz)] nsIDOMMozSmsRequest getMessage(in long id);

  // The parameter can be either a message id or a SmsMessage.
  nsIDOMMozSmsRequest delete(in jsval param);

  nsIDOMMozSmsRequest getMessages(in nsIDOMMozSmsFilter filter, in boolean reverse);

  attribute nsIDOMEventListener onreceived;
  attribute nsIDOMEventListener onsent;
  attribute nsIDOMEventListener ondelivered;
};
