/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 2000
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Vidur Apparao <vidur@netscape.com> (original author)
 *   Johnny Stenback <jst@netscape.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either of the GNU General Public License Version 2 or later (the "GPL"),
 * or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsIDOMHTMLElement.idl"

interface nsIControllers;
interface nsIDOMFileList;
interface nsIDOMValidityState;

 /**
  * The nsIDOMHTMLInputElement interface is the interface to a [X]HTML
  * input element.
  *
  * This interface is trying to follow the DOM Level 2 HTML specification:
  * http://www.w3.org/TR/DOM-Level-2-HTML/
  *
  * with changes from the work-in-progress WHATWG HTML specification:
  * http://www.whatwg.org/specs/web-apps/current-work/
  */

[scriptable, uuid(6b1175a5-70dd-4c26-be99-9e780c32550d)]
interface nsIDOMHTMLInputElement : nsIDOMHTMLElement
{
           attribute DOMString             accept;
           attribute DOMString             alt;

           attribute DOMString             autocomplete;
           attribute boolean               autofocus;
           attribute boolean               defaultChecked;
           attribute boolean               checked;
           attribute boolean               disabled;
  readonly attribute nsIDOMHTMLFormElement form;
           attribute DOMString             formAction;
           attribute DOMString             formEnctype;
           attribute DOMString             formMethod;
           attribute boolean               formNoValidate;
           attribute DOMString             formTarget;

  readonly attribute nsIDOMFileList        files;

           attribute boolean               indeterminate;

  readonly attribute nsIDOMHTMLElement     list;
           attribute long                  maxLength;

           attribute boolean               multiple;
           attribute DOMString             name;

           attribute DOMString             pattern;
           attribute DOMString             placeholder;
           attribute boolean               readOnly;
           attribute boolean               required;

           attribute DOMString             align;

           attribute unsigned long         size;
           attribute DOMString             src;

           attribute DOMString             type;
           attribute DOMString             defaultValue;
           attribute DOMString             value;

  // The following lines are part of the constraint validation API, see:
  // http://www.whatwg.org/specs/web-apps/current-work/#the-constraint-validation-api
  readonly attribute boolean             willValidate;
  readonly attribute nsIDOMValidityState validity;
  readonly attribute DOMString           validationMessage;
  boolean checkValidity();
  void setCustomValidity(in DOMString error);

  void select();
           attribute long                  selectionStart;
           attribute long                  selectionEnd;
  void setSelectionRange(in long selectionStart, in long selectionEnd, [optional] in DOMString direction);
           attribute DOMString             selectionDirection;


           attribute DOMString             useMap;
  readonly attribute nsIControllers        controllers;	
	readonly attribute long                  textLength;

  void mozGetFileNameArray([optional] out unsigned long aLength,
                           [array,size_is(aLength), retval] out wstring aFileNames);
  void mozSetFileNameArray([array,size_is(aLength)] in wstring aFileNames,
                           in unsigned long aLength);

    /**
   * This non-standard method prevents to check types manually to know if the
   * element is a text field.
   */
  boolean mozIsTextField(in boolean aExcludePassword);
};
