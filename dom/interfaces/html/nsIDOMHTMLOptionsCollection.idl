/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 2003
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Johnny Stenback <jst@netscape.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsIDOMHTMLElement.idl"
#include "nsIDOMHTMLCollection.idl"

interface nsIDOMHTMLOptionElement;
interface nsIDOMHTMLSelectElement;

/**
 * The nsIDOMHTMLOptionsCollection interface is the interface to a
 * collection of [X]HTML option elements.
 *
 * This interface is trying to follow the DOM Level 2 HTML specification:
 * http://www.w3.org/TR/DOM-Level-2-HTML/
 *
 * with changes from the work-in-progress WHATWG HTML specification:
 * http://www.whatwg.org/specs/web-apps/current-work/
 */

// Introduced in DOM Level 2:
[scriptable, uuid(429b041b-06df-486c-9a3a-a1d901cc76a2)]
interface nsIDOMHTMLOptionsCollection : nsISupports
{
           attribute unsigned long   length;
                                        // raises(DOMException) on setting

  // FIXME item should just be inherited from nsIDOMHTMLCollection
  nsIDOMNode         item(in unsigned long index);

  // FIXME namedItem (and getNamedItem) should return a NodeList if there are
  //       multiple matching items
  [getter,forward(getNamedItem)] nsIDOMNode namedItem(in DOMString name);

  /**
   * Get the node for the name.  Returns null if no node exists for the name.
   */
  [noscript,notxpcom,nostdcall] nsISupports getNamedItem(in DOMString name,
                                                         out nsWrapperCachePtr cache);

           attribute long             selectedIndex;

  [setter,noscript] void    setOption(in unsigned long index,
                                      in nsIDOMHTMLOptionElement option);

  [noscript] readonly attribute nsIDOMHTMLSelectElement select;

  // This add method implementation means the following
  // since IDL doesn't support overloading.
  //   void add(in nsIDOMHTMLOptionElement,
  //            [optional] in nsIDOMHTMLOptionElement)
  //   void add(in nsIDOMHTMLOptionElement, in long)
  void                      add(in nsIDOMHTMLOptionElement option,
                                [optional] in nsIVariant before);
  void                      remove(in long index);
};
