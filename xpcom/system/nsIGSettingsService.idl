/* -*- Mode: IDL; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the Mozilla GNOME integration code.
 *
 * The Initial Developer of the Original Code is
 * Canonical Ltd.
 * Portions created by the Initial Developer are Copyright (C) 2010
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *  Chris Coulson <chris.coulson@canonical.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"
#include "nsIArray.idl"

[scriptable, uuid(16d5b0ed-e756-4f1b-a8ce-9132e869acd8)]
interface nsIGSettingsCollection : nsISupports
{
  void          setString(in AUTF8String key, in AUTF8String value);
  void          setBoolean(in AUTF8String key, in boolean value);
  void          setInt(in AUTF8String key, in long value);
  AUTF8String   getString(in AUTF8String key);
  boolean       getBoolean(in AUTF8String key);
  long          getInt(in AUTF8String key);
  nsIArray      getStringList(in AUTF8String key);
};

[scriptable, uuid(849c088b-57d1-4f24-b7b2-3dc4acb04c0a)]
interface nsIGSettingsService : nsISupports
{
  nsIGSettingsCollection    getCollectionForSchema(in AUTF8String schema);
};

%{C++
#define NS_GSETTINGSSERVICE_CONTRACTID "@mozilla.org/gsettings-service;1"
%}
