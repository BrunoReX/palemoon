# -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

XPIDL_SOURCES += [
    'nsIConsoleListener.idl',
    'nsIConsoleMessage.idl',
    'nsIConsoleService.idl',
    'nsICycleCollectorListener.idl',
    'nsIDebug.idl',
    'nsIDebug2.idl',
    'nsIErrorService.idl',
    'nsIException.idl',
    'nsIExceptionService.idl',
    'nsIGZFileWriter.idl',
    'nsIInterfaceRequestor.idl',
    'nsIMemory.idl',
    'nsIMemoryInfoDumper.idl',
    'nsIMemoryReporter.idl',
    'nsIMessageLoop.idl',
    'nsIMutable.idl',
    'nsIProgrammingLanguage.idl',
    'nsISupports.idl',
    'nsITraceRefcnt.idl',
    'nsIUUIDGenerator.idl',
    'nsIVersionComparator.idl',
    'nsIVisualEventTracer.idl',
    'nsIWeakReference.idl',
    'nsrootidl.idl',
]

if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'cocoa':
    XPIDL_SOURCES += [
        'nsIMacUtils.idl',
    ]

XPIDL_MODULE = 'xpcom_base'

MODULE = 'xpcom'

EXPORTS += [
    'nsAgg.h',
    'nsAutoRef.h',
    'nsCom.h',
    'nsDebugImpl.h',
    'nsGZFileWriter.h',
    'nsIAllocator.h',
    'nsIID.h',
    'nsISizeOf.h',
    'nsISupportsObsolete.h',
    'nsInterfaceRequestorAgg.h',
    'nsStackWalk.h',
    'nsTraceRefcntImpl.h',
    'nsWeakPtr.h',
]

if CONFIG['MOZ_DEBUG']:
    EXPORTS += ['pure.h']

EXPORTS.mozilla += [
    'AvailableMemoryTracker.h',
    'ClearOnShutdown.h',
    'CycleCollectedJSRuntime.h',
    'MapsMemoryReporter.h',
    'StackWalk.h',
    'StaticMutex.h',
    'StaticPtr.h',
    'VisualEventTracer.h',
    'nsMemoryInfoDumper.h',
]

CPP_SOURCES += [
    'AvailableMemoryTracker.cpp',
    'ClearOnShutdown.cpp',
    'CycleCollectedJSRuntime.cpp',
    'VisualEventTracer.cpp',
    'nsConsoleMessage.cpp',
    'nsConsoleService.cpp',
    'nsCycleCollector.cpp',
    'nsDebugImpl.cpp',
    'nsErrorAsserts.cpp',
    'nsErrorService.cpp',
    'nsExceptionService.cpp',
    'nsGZFileWriter.cpp',
    'nsInterfaceRequestorAgg.cpp',
    'nsMemoryImpl.cpp',
    'nsMemoryInfoDumper.cpp',
    'nsMemoryReporterManager.cpp',
    'nsMessageLoop.cpp',
    'nsStackWalk.cpp',
    'nsSystemInfo.cpp',
    'nsTraceRefcntImpl.cpp',
    'nsUUIDGenerator.cpp',
    'nsVersionComparatorImpl.cpp',
]

if CONFIG['OS_ARCH'] == 'Linux':
    CPP_SOURCES += [
        'MapsMemoryReporter.cpp',
    ]

if CONFIG['MOZ_WIDGET_TOOLKIT'] == 'cocoa':
    CPP_SOURCES += [
        'nsMacUtilsImpl.cpp',
    ]
elif CONFIG['MOZ_WIDGET_TOOLKIT'] == 'windows':
    CPP_SOURCES += [
        'nsCrashOnException.cpp',
    ]
