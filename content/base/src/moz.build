# -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

MODULE = 'content'

EXPORTS += [
    'mozAutoDocUpdate.h',
    'nsAtomListUtils.h',
    'nsAttrAndChildArray.h',
    'nsAttrName.h',
    'nsAttrValue.h',
    'nsAttrValueInlines.h',
    'nsContentList.h',
    'nsContentListDeclarations.h',
    'nsContentSink.h',
    'nsCrossSiteListenerProxy.h',
    'nsDOMAttributeMap.h',
    'nsFrameMessageManager.h',
    'nsGkAtomList.h',
    'nsGkAtoms.h',
    'nsMappedAttributeElement.h',
    'nsNodeInfoManager.h',
    'nsNodeUtils.h',
    'nsPropertyTable.h',
    'nsRange.h',
    'nsSandboxFlags.h',
    'nsScriptLoader.h',
    'nsStubDocumentObserver.h',
    'nsStubMutationObserver.h',
    'nsStyledElement.h',
    'nsTextFragment.h',
]

if CONFIG['MOZ_WEBRTC']:
    EXPORTS += [
        'nsDOMDataChannel.h',
        'nsDOMDataChannelDeclarations.h',
    ]
    CPP_SOURCES += [
        'nsDOMDataChannel.cpp',
    ]

# Are we targeting x86-32 or x86-64?  If so, we want to include SSE2 code for
# nsTextFragment.cpp
if CONFIG['INTEL_ARCHITECTURE']:
    CPP_SOURCES += [
        'nsTextFragmentSSE2.cpp',
    ]

EXPORTS.mozilla.dom += [
    'Attr.h',
    'Comment.h',
    'DOMImplementation.h',
    'DocumentFragment.h',
    'DocumentType.h',
    'EventSource.h',
    'Link.h',
    'NodeIterator.h',
    'Text.h',
    'TreeWalker.h',
]

CPP_SOURCES += [
    'Attr.cpp',
    'Comment.cpp',
    'DOMImplementation.cpp',
    'DirectionalityUtils.cpp',
    'DocumentFragment.cpp',
    'DocumentType.cpp',
    'Element.cpp',
    'EventSource.cpp',
    'FileIOObject.cpp',
    'FragmentOrElement.cpp',
    'Link.cpp',
    'NodeIterator.cpp',
    'Text.cpp',
    'ThirdPartyUtil.cpp',
    'TreeWalker.cpp',
    'WebSocket.cpp',
    'nsAtomListUtils.cpp',
    'nsAttrAndChildArray.cpp',
    'nsAttrValue.cpp',
    'nsAttrValueOrString.cpp',
    'nsCCUncollectableMarker.cpp',
    'nsCSPService.cpp',
    'nsChannelPolicy.cpp',
    'nsContentAreaDragDrop.cpp',
    'nsContentIterator.cpp',
    'nsContentList.cpp',
    'nsContentPolicy.cpp',
    'nsContentSink.cpp',
    'nsContentUtils.cpp',
    'nsCopySupport.cpp',
    'nsCrossSiteListenerProxy.cpp',
    'nsDOMAttributeMap.cpp',
    'nsDOMBlobBuilder.cpp',
    'nsDOMCaretPosition.cpp',
    'nsDOMFile.cpp',
    'nsDOMFileReader.cpp',
    'nsDOMLists.cpp',
    'nsDOMMutationObserver.cpp',
    'nsDOMParser.cpp',
    'nsDOMSerializer.cpp',
    'nsDOMSettableTokenList.cpp',
    'nsDOMTokenList.cpp',
    'nsDataDocumentContentPolicy.cpp',
    'nsDocument.cpp',
    'nsDocumentEncoder.cpp',
    'nsFormData.cpp',
    'nsFrameLoader.cpp',
    'nsFrameMessageManager.cpp',
    'nsGenConImageContent.cpp',
    'nsGenericDOMDataNode.cpp',
    'nsGkAtoms.cpp',
    'nsHTMLContentSerializer.cpp',
    'nsHostObjectProtocolHandler.cpp',
    'nsHostObjectURI.cpp',
    'nsINode.cpp',
    'nsImageLoadingContent.cpp',
    'nsInProcessTabChildGlobal.cpp',
    'nsLineBreaker.cpp',
    'nsMappedAttributeElement.cpp',
    'nsMappedAttributes.cpp',
    'nsMixedContentBlocker.cpp',
    'nsNameSpaceManager.cpp',
    'nsNoDataProtocolContentPolicy.cpp',
    'nsNodeInfo.cpp',
    'nsNodeInfoManager.cpp',
    'nsNodeUtils.cpp',
    'nsObjectLoadingContent.cpp',
    'nsPlainTextSerializer.cpp',
    'nsPropertyTable.cpp',
    'nsRange.cpp',
    'nsReferencedElement.cpp',
    'nsScriptElement.cpp',
    'nsScriptLoader.cpp',
    'nsStubDocumentObserver.cpp',
    'nsStubMutationObserver.cpp',
    'nsStyleLinkElement.cpp',
    'nsStyledElement.cpp',
    'nsSyncLoadService.cpp',
    'nsTextFragment.cpp',
    'nsTextNode.cpp',
    'nsTraversal.cpp',
    'nsTreeSanitizer.cpp',
    'nsViewportInfo.cpp',
    'nsXHTMLContentSerializer.cpp',
    'nsXMLContentSerializer.cpp',
    'nsXMLHttpRequest.cpp',
    'nsXMLNameSpaceMap.cpp',
]

EXTRA_PP_COMPONENTS += [
    'contentSecurityPolicy.js',
]
