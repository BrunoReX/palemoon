/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is the Mozilla Corporation.
 * Portions created by the Initial Developer are Copyright (C) 2010
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Alon Zakai <azakai@mozilla.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

#include "nsISupports.idl"

/**
 * This service lets other components be woken up when particular
 * messageManager messages arrive. By using this wakeup service,
 * those components do not need to be started until they are
 * needed.
 *
 * The parentprocessmessagemanager is used for this, so messages
 * send from childprocessmessagemanagers will be heard.
 *
 * Components can request wakeups using the .manifest files, or
 * by someone else calling requestWakeup. For .manifest files,
 * the line should look something like
 *
 *   category wakeup-request nsComponent @mozilla.org/myservice;1,
 *            nsIMyInterface,getService,myMessage1,myMessage2[,..]
 *
 * Currently we require services to expose wrappedJSObject, but
 * that will be cleaned up in bug 593407, at which point the
 * service that will be woken up must implement
 * nsIFrameMessageListener.
 */
[scriptable, uuid(968e31b6-b859-42f3-8140-014378fe1783)]
interface nsIMessageWakeupService : nsISupports
{
  /**
   * Requests that the wakeup service wake us up when a particular
   * message arrives. At that time the service will be woken up
   * and subscribed to receive further messages of that name as
   * well.
   */
  boolean requestWakeup(in AString aMessageName,
                        in AString aCid,
                        in AString aIid,
                        in AString aMethod);
};

