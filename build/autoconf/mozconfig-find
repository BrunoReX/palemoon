#! /bin/sh
#
# ***** BEGIN LICENSE BLOCK *****
# Version: MPL 1.1/GPL 2.0/LGPL 2.1
#
# The contents of this file are subject to the Mozilla Public License Version
# 1.1 (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
# http://www.mozilla.org/MPL/
#
# Software distributed under the License is distributed on an "AS IS" basis,
# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
# for the specific language governing rights and limitations under the
# License.
#
# The Original Code is mozilla.org code.
#
# The Initial Developer of the Original Code is
# Netscape Communications Corporation.
# Portions created by the Initial Developer are Copyright (C) 1999
# the Initial Developer. All Rights Reserved.
#
# Contributor(s):
#   Stephen Lamm <slamm@netscape.com>
#
# Alternatively, the contents of this file may be used under the terms of
# either of the GNU General Public License Version 2 or later (the "GPL"),
# or the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
# in which case the provisions of the GPL or the LGPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of either the GPL or the LGPL, and not to allow others to
# use your version of this file under the terms of the MPL, indicate your
# decision by deleting the provisions above and replace them with the notice
# and other provisions required by the GPL or the LGPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the MPL, the GPL or the LGPL.
#
# ***** END LICENSE BLOCK *****

# mozconfigfind - Loads options from .mozconfig onto configure's
#    command-line. The .mozconfig file is searched for in the 
#    order:
#       If $MOZCONFIG is set, use that.
#       If one of $TOPSRCDIR/.mozconfig or $TOPSRCDIR/mozconfig exists, use it.
#       If both exist, or if various legacy locations contain a mozconfig, error.
#       Otherwise, use the default build options.
#
topsrcdir=$1

abspath() {
  if uname -s | grep -q MINGW; then
    # We have no way to figure out whether we're in gmake or pymake right
    # now. gmake gives us Unix-style paths while pymake gives us Windows-style
    # paths, so attempt to handle both.
    regexes='^\([A-Za-z]:\|\\\\\|\/\) ^\/'
  else
    regexes='^\/'
  fi

  for regex in $regexes; do
    if echo $1 | grep -q $regex; then
      echo $1
      exit 0
    fi
  done

  # If we're at this point, we have a relative path
  echo `pwd`/$1
}

if [ -n "$MOZCONFIG" ] && ! [ -f "$MOZCONFIG" ]; then
  echo "Specified MOZCONFIG \"$MOZCONFIG\" does not exist!" 1>&2
  exit 1
fi

if [ -n "$MOZ_MYCONFIG" ]; then
  echo "Your environment currently has the MOZ_MYCONFIG variable set to \"$MOZ_MYCONFIG\". MOZ_MYCONFIG is no longer supported. Please use MOZCONFIG instead." 1>&2
  exit 1
fi

if [ -z "$MOZCONFIG" ] && [ -f "$topsrcdir/.mozconfig" ] && [ -f "$topsrcdir/mozconfig" ]; then
  echo "Both \$topsrcdir/.mozconfig and \$topsrcdir/mozconfig are supported, but you must choose only one. Please remove the other." 1>&2
  exit 1
fi

for _config in "$MOZCONFIG" \
               "$topsrcdir/.mozconfig" \
               "$topsrcdir/mozconfig"
do
  if test -f "$_config"; then
    echo `abspath $_config`
    exit 0
  fi
done

# We used to support a number of other implicit .mozconfig locations. We now
# detect if we were about to use any of these locations and issue an error if we
# find any.
for _config in "$topsrcdir/mozconfig.sh" \
               "$topsrcdir/myconfig.sh" \
               "$HOME/.mozconfig" \
               "$HOME/.mozconfig.sh" \
               "$HOME/.mozmyconfig.sh"
do
  if test -f "$_config"; then
    echo "You currently have a mozconfig at \"$_config\". This implicit location is no longer supported. Please move it to $topsrcdir/.mozconfig or specify it explicitly via \$MOZCONFIG." 1>&2
    exit 1
  fi
done
