<?xml version="1.0"?>
<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1/GPL 2.0/LGPL 2.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is the Mozilla Inspector Module.
   -
   - The Initial Developer of the Original Code is The Mozilla Foundation.
   - Portions created by the Initial Developer are Copyright (C) 2011
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -   Joe Walker <jwalker@mozilla.com> (original author)
   -   Mihai Șucan <mihai.sucan@gmail.com>
   -   Michael Ratcliffe <mratcliffe@mozilla.com>
   -   Dão Gottwald <dao@mozilla.com>
   -
   - Alternatively, the contents of this file may be used under the terms of
   - either the GNU General Public License Version 2 or later (the "GPL"), or
   - the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
   - in which case the provisions of the GPL or the LGPL are applicable instead
   - of those above. If you wish to allow use of your version of this file only
   - under the terms of either the GPL or the LGPL, and not to allow others to
   - use your version of this file under the terms of the MPL, indicate your
   - decision by deleting the provisions above and replace them with the notice
   - and other provisions required by the LGPL or the GPL. If you do not delete
   - the provisions above, a recipient may use your version of this file under
   - the terms of any one of the MPL, the GPL or the LGPL.
   -
   - ***** END LICENSE BLOCK ***** -->

<?xml-stylesheet href="chrome://global/skin/global.css"?>
<?xml-stylesheet href="chrome://browser/skin/devtools/csshtmltree.css" type="text/css"?>

<!DOCTYPE window [
  <!ENTITY % inspectorDTD SYSTEM "chrome://browser/locale/devtools/styleinspector.dtd">
  %inspectorDTD;
  <!ELEMENT loop ANY>
  <!ATTLIST li foreach CDATA #IMPLIED>
  <!ATTLIST div foreach CDATA #IMPLIED>
  <!ATTLIST loop foreach CDATA #IMPLIED>
  <!ATTLIST a target CDATA #IMPLIED>
  <!ATTLIST a __pathElement CDATA #IMPLIED>
  <!ATTLIST div _id CDATA #IMPLIED>
  <!ATTLIST div save CDATA #IMPLIED>
  <!ATTLIST table save CDATA #IMPLIED>
  <!ATTLIST loop if CDATA #IMPLIED>
  <!ATTLIST tr if CDATA #IMPLIED>
]>

<xul:window xmlns="http://www.w3.org/1999/xhtml"
            xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

<!-- The output from #templateRoot (below) is inserted here. -->
<div id="root"></div>

<!-- When no properties are found the following block is displayed. -->
<div id="noResults" hidden="">
  &noPropertiesFound;
</div>

<!-- The output from #templateProperty (below) is appended here. -->
<table id="propertyContainer">
</table>

<xul:hbox id="footer">
  <xul:label class="legendKey bestmatch">&bestMatch;</xul:label>
  <xul:label class="legendKey matched">&matched;</xul:label>
  <xul:label class="legendKey parentmatch">&parentMatch;</xul:label>
</xul:hbox>
<!--
To visually debug the templates without running firefox, alter the display:none
-->
<div style="display:none;">
  <!--
  templateRoot sits at the top of the window and contains the "include default
  styles" checkbox. For data it needs an instance of CssHtmlTree.
  -->
  <div id="templateRoot">
    <xul:hbox class="headerControls" flex="1" align="center">
      <xul:checkbox class="onlyuserstyles" save="${onlyUserStylesCheckbox}"
                    oncommand="${onlyUserStylesChanged}" checked="true"
                    label="&userStylesLabel;"/>
      <xul:textbox class="searchfield" type="search" save="${searchField}"
                   placeholder="&userStylesSearch;" flex="1"
                   oncommand="${filterChanged}"/>
    </xul:hbox>
  </div>


  <!--
  A templateMatchedSelectors sits inside each templateProperties showing the
  list of selectors that affect that property. Each needs data like this:
  {
    matchedSelectorViews: ..., // from cssHtmlTree.propertyViews[name].matchedSelectorViews
  }
  This is a template so the parent does not need to be a table, except that
  using a div as the parent causes the DOM to muck with the tr elements
  -->
  <div id="templateMatchedSelectors">
    <table>
      <loop foreach="selector in ${matchedSelectorViews}">
        <tr>
          <td dir="ltr" class="rule-text ${selector.statusClass}">
            ${selector.humanReadableText(__element)}
          </td>
          <td class="rule-link">
            <a target="_blank" href="view-source:${selector.selectorInfo.href}" class="link"
               title="${selector.selectorInfo.href}">${selector.selectorInfo.source}</a>
          </td>
        </tr>
      </loop>
    </table>
  </div>
</div>

</xul:window>
